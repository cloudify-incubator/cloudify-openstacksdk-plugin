tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.5/types.yaml
  - plugin.yaml

inputs:

  auth_url:
    type: string

  username:
    type: string

  password:
    type: string

  region_name:
    type: string

  project_name:
    type: string

  external_network_id:
    type: string
    description: A network that provisions floating IPs.

  image:
    type: string
    description: The UUID of an Ubuntu Trusty 14.04 image in your Openstack account.

  flavor:
    type: string
    description: The UUID of small flavor in your Openstack account.

  network_id:
    type: string
    description: The UUID for your Cloudify Manager Openstack Network.

  subnet_id:
    type: string
    description: The UUID for your Cloudify Manager Openstack Subnet.


dsl_definitions:
  client_config: &client_config
    auth_url: { get_input: auth_url }
    username: { get_input: username }
    password: { get_input: password }
    region_name: { get_input: region_name }
    project_name: { get_input: project_name }

node_templates:

  server_node:
    type: cloudify.nodes.openstack.WindowsServer
    properties:
      client_config: *client_config
      agent_config:
        install_method: init_script
        user: Admin
      resource_config:
        name: 'server-agent-enabled'
        image_id: { get_input: image }
        flavor_id: { get_input: flavor }
        networks:
           - port: { get_attribute: [ port, id ] }
    relationships:
     - type: cloudify.relationships.openstack.server_connected_to_port
       target: port
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            resource_config: { get_property: [ SELF, resource_config ] }


  security_group:
    type: cloudify.nodes.openstack.SecurityGroup
    properties:
      client_config: *client_config
      security_group_rules:
        - remote_ip_prefix: 0.0.0.0/0
          port_range_max: 80
          port_range_min: 80
          direction: ingress
          protocol: tcp

        - remote_ip_prefix: 0.0.0.0/0
          port_range_max: 80
          port_range_min: 80
          direction: egress
          protocol: tcp

        - remote_ip_prefix: 0.0.0.0/0
          port_range_min: 53333
          port_range_max: 53333
          protocol: tcp
          direction: ingress

        - remote_ip_prefix: 0.0.0.0/0
          port_range_min: 53333
          port_range_max: 53333
          protocol: tcp
          direction: egress

        - remote_ip_prefix: 0.0.0.0/0
          port_range_max: 5985
          port_range_min: 5985
          direction: ingress
          protocol: tcp

        - remote_ip_prefix: 0.0.0.0/0
          port_range_max: 5985
          port_range_min: 5985
          direction: egress
          protocol: tcp

      resource_config:
        name: 'agent_sg'
        description: 'A security group created by Cloudify OpenStack SDK plugin.'

  port:
    type: cloudify.nodes.openstack.Port
    properties:
      client_config: *client_config
      resource_config:
        name: 'server_port'
        network_id: { get_input: network_id }
        fixed_ips:
          - subnet_id: { get_input: subnet_id }
        security_groups:
          - { get_attribute: [ security_group, id ] }
    relationships:
       - type: cloudify.relationships.connected_to
         target: security_group
       - type: cloudify.relationships.openstack.port_connected_to_floating_ip
         target: ip
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            resource_config: { get_property: [ SELF, resource_config ] }

  ip:
    type: cloudify.nodes.openstack.FloatingIP
    properties:
      client_config: *client_config
      resource_config:
        floating_network_id: { get_input: external_network_id }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            resource_config: { get_property: [ SELF, resource_config ] }
